# 1463 : 1로 만들기
# 대부분의 숫자는 %3, %2, -1 을 순서로 진행하면 최소값이 나오지만 10의 경우는 그렇지 않다. (10 > 9 > 3 > 1)
# 그렇기 때문에 메모이제이션(반복수행을 제거)을 사용하여 시간초과를 줄인다.
# 참고 : https://bio-info.tistory.com/159

n = int(input())

# d에 계산된 값을 저장해둔다. n + 1이라고 한 이유
# 1번째 수는 사실 d[1]이 아니고 d[2]이기 때문에, 계산하기 편하게 d[1]을 1번째 인 것 처럼 만들어준다.
d = [0] * (n+1)

# 2부터 n까지 반복
for i in range(2,n+1):
    # 1을 빼는 연산 -> 1회 진행
    d[i]=d[i-1]+1
    
    if i % 2 == 0:
        # 1을 더하는 것은 d는 결과가 아닌 계산한 횟수를 저장하는 것이기 때문이다.
        # d[i]에는 더하지 않는 이유는 이미 1을 뺄 때 1을 더해준 이력이 있기 때문이다.
        d[i]=min(d[i], d[i//2]+1)
    if i % 3 == 0:
        d[i]=min(d[i], d[i//3]+1)
        
print(d[n])